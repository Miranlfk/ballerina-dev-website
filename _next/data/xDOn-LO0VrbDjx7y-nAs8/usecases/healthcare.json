{"pageProps":{"samples":{"ai-pair-programming":{"frontmatter":{"title":"AI pair programming for your code","description":"AI code gen like Github Copilot knows Ballerina. Ballerina knows healthcare. Why do all the work? Let AI do at least half of it for you!","url":"","image":"images/health-ai-pair-programming.png"},"code":""},"apis-are-new-dll":{"frontmatter":{"title":"(Extra!) APIs are the new DLLs on Choreo","description":"Deploy healthcare accelerator code into WSO2 Choreo as APIs and access accelerator functionality not only from Ballerina but also other languages such as Java, .Net and Python as internal APIs, or from other systems as external APIs. Bring your own code to the party on Choreo.","url":"https://wso2.com/choreo/internal-developer-platform","image":"images/health-apis-are-new-dll.png"},"code":""},"ballerina-is-fhir":{"frontmatter":{"title":"FHIR? Ballerina is FHIR","description":"With built-in support for FHIR (Fast Healthcare Interoperability Resources), Ballerina makes it easy to develop and deploy healthcare applications that can exchange and process FHIR resources. Ballerina's native FHIR capabilities enables healthcare developers to build scalable and flexible healthcare solutions that can adapt to changing healthcare needs and standards.","url":"https://github.com/ballerina-guides/healthcare-samples/blob/main/working_with_fhir/working_with_fhir_parsing.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">main</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// The following example is a simple serialized Patient resource to parse</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> input </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;{&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #032F62\">&quot;</span><span style=\"color: #005CC5\">\\&quot;</span><span style=\"color: #032F62\">resourceType</span><span style=\"color: #005CC5\">\\&quot;</span><span style=\"color: #032F62\"> : </span><span style=\"color: #005CC5\">\\&quot;</span><span style=\"color: #032F62\">Patient</span><span style=\"color: #005CC5\">\\&quot;</span><span style=\"color: #032F62\">,&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #032F62\">&quot;  </span><span style=\"color: #005CC5\">\\&quot;</span><span style=\"color: #032F62\">name</span><span style=\"color: #005CC5\">\\&quot;</span><span style=\"color: #032F62\"> : [{&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #032F62\">&quot;    </span><span style=\"color: #005CC5\">\\&quot;</span><span style=\"color: #032F62\">family</span><span style=\"color: #005CC5\">\\&quot;</span><span style=\"color: #032F62\">: </span><span style=\"color: #005CC5\">\\&quot;</span><span style=\"color: #032F62\">Simpson</span><span style=\"color: #005CC5\">\\&quot;</span><span style=\"color: #032F62\">&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #032F62\">&quot;  }]&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #032F62\">&quot;}&quot;</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Parse it - you can pass the input (as a string or a json) and the</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// type of the resource you want to parse.</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    fhir</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Patient patient </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> fhirParser</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">parse</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">input</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">fhir</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Patient).</span><span style=\"color: #6F42C1\">ensureType</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Access the parsed data</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    fhir</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">HumanName[] names </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> patient.name </span><span style=\"color: #D73A49\">?:</span><span style=\"color: #24292E\"> [];</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Family Name: &quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">names</span><span style=\"color: #24292E\">[</span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">].family);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"ballerina-is-hl7":{"frontmatter":{"title":"HL7?  Ballerina is HL7","description":"Ballerina offers built-in support for the HL7 messaging standard, which is still the most commonly used standard in the healthcare industry to facilitate the exchange of information between different systems. With Ballerina, parsing HL7 messages is a breeze, simplifying the processing and exchange of healthcare data.","url":"https://github.com/ballerina-guides/healthcare-samples/blob/main/working_with_hl7/working_with_hl7_parsing.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">main</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// The following example is a simple serialized HL v2.3 ADT A01 message.</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">string</span><span style=\"color: #24292E\"> msg </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;MSH|^~</span><span style=\"color: #005CC5\">\\\\</span><span style=\"color: #032F62\">&amp;|ADT1|GOOD HEALTH HOSPITAL|GHH LAB, INC.|GOOD HEALTH HOSPITAL|&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;198808181126|SECURITY|ADT^A01^ADT_A01|MSG00001|P|2.3||</span><span style=\"color: #005CC5\">\\r</span><span style=\"color: #032F62\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;EVN|A01|200708181123||</span><span style=\"color: #005CC5\">\\r</span><span style=\"color: #032F62\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;PID|1||PATID1234^5^M11^ADT1^MR^GOOD HEALTH HOSPITAL~123456789^^^USSSA^SS||&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;BATMAN^ADAM^A^III||19610615|M||C|2222 HOME STREET^^&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;GREENSBORO^NC^27401-1020|GL|(555) 555-2004|(555)555-2004||S|&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;|PATID12345001^2^M10^ADT1^AN^A|&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;444333333|987654^NC|</span><span style=\"color: #005CC5\">\\r</span><span style=\"color: #032F62\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;NK1|1|NUCLEAR^NELDA^W|SPO^SPOUSE||||NK^NEXT OF KIN</span><span style=\"color: #005CC5\">\\r</span><span style=\"color: #032F62\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;PV1|1|I|2000^2012^01||||004777^ATTEND^AARON^A|||SUR||||ADM|A0|&quot;</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Parse it</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    hl7</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">HL7Parser parser </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> ();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    hl7</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">Message</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">hl7:GenericMessage</span><span style=\"color: #D73A49\">|</span><span style=\"color: #24292E\">hl7:HL7Error parsedMsg </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> parser.</span><span style=\"color: #6F42C1\">parse</span><span style=\"color: #24292E\">(</span><span style=\"color: #E36209\">msg</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> parsedMsg </span><span style=\"color: #D73A49\">is</span><span style=\"color: #24292E\"> hl7</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">HL7Error {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Error occurred while parsing the received message. Details: &quot;</span><span style=\"color: #24292E\">, </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        parsedMsg.</span><span style=\"color: #6F42C1\">detail</span><span style=\"color: #24292E\">().message);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Error occurred while parsing the received message&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">parsedMsg</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// This message, ADT^A01 is an HL7 data type consisting of several components, so we</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// will cast it as such. The ADT_A01 class extends from Message, providing specialized</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// accessors for ADT^A01&#39;s segments.</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">//  </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// Ballerina HL7 provides several versions of the ADT_A01 record type, each in </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// a different package (note the import statement above) corresponding to the </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// HL7 version for the message.</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    hl7v23</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">ADT_A01 adtMsg </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\">hl7v23</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">ADT_A01</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\">parsedMsg;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    hl7v23</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">XPN[] patientName </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> adtMsg.pid.pid5;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Family Name: &quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #E36209\">patientName</span><span style=\"color: #24292E\">[</span><span style=\"color: #005CC5\">0</span><span style=\"color: #24292E\">].xpn1);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"connect-to-emrs":{"frontmatter":{"title":"Connect to EMRs, EHRs, data sources and more","description":"Ballerina has 100s of connectors to well known Health Systems such as Epic, Cerner, Athena, non health systems such as Salesforce, and can connect to any backend that has a FHIR, HL7 or Open API interface. Go below the hood and connect directly to a database as well if that’s the only way to fetch data.","url":"https://github.com/ballerina-guides/healthcare-samples/blob/main/working_with_fhir_connector/working_with_fhir_connector.bal","image":""},"code":"<pre class=\"shiki github-light\" style=\"background-color: #fff\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #6A737D\">// Create a FHIR client configuration by providing the connection parameters</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">fhirClient</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">FHIRConnectorConfig cernerConfig </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">   baseURL</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> base,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">   mimeType</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> fhirClient:FHIR_JSON,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">   authConfig</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">       tokenUrl</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> tokenUrl,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">       clientId</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> clientId,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">       clientSecret</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> clientSecret,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">       scopes</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> scopes</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">   }</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #6A737D\">// Create a FHIR client using the configuration</span></span>\n<span class=\"line\"><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> fhirClient</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">FHIRConnector fhirConnectorObj </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> (</span><span style=\"color: #E36209\">cernerConfig</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">main</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">returns</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">error?</span><span style=\"color: #24292E\"> {</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">   </span><span style=\"color: #6A737D\">// Get a patient resource by id using the initialized FHIR client</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">   fhirClient</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">FHIRResponse fhirResponse </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">check</span><span style=\"color: #24292E\"> fhirConnectorObj</span><span style=\"color: #D73A49\">-&gt;</span><span style=\"color: #6F42C1\">getById</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Patient&quot;</span><span style=\"color: #24292E\">, </span><span style=\"color: #032F62\">&quot;12724067&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">   </span><span style=\"color: #6A737D\">// Print the response</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">   io</span><span style=\"color: #D73A49\">:</span><span style=\"color: #6F42C1\">println</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Cerner EMR response: &quot;</span><span style=\"color: #24292E\">, fhirResponse.&#39;resource);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">}</span></span></code></pre>"},"health-accelerators":{"frontmatter":{"title":"Healthcare accelerators to kick start app dev","description":"Ballerina Central is your go to location for healthcare accelerators in Ballerina. Pick from healthcare data standards like FHIR and HL7, FHIR connectors and validators, Use case templates (e.g expose EPIC as a FHIR API), health models, Capability Statement template, Smart configuration template, FHIR client, EMR connectors,  Implementation Guide based templates and pre-built APIs such as a Patient API.","url":"https://central.ballerina.io/search?q=ballerinax%2Fhealth&sort=created_date%2CASC&page=1","image":"images/health-bal-pkgs.png"},"code":""},"powerful-edi-for-claims":{"frontmatter":{"title":"Powerful EDI for Claims","description":"Ballerina has powerful support for Electronic Interchange Formats (EDI). In healthcare, this means out of the box handling of X12, 834s, 837s and more region specific standards via native schema mapping. Go from EDI formats to Ballerina Records and back; Do Data Mapping on that and you’re off to the races!","url":"","image":""},"code":""},"powerful-health-data-mapping":{"frontmatter":{"title":"Powerful Health Data Mapping","description":"Ballerina makes data mapping seamless through its pre-built HL7v2.x to FHIR and C-CDA to FHIR transformation functionalities, making short work of healthcare data mapping tasks. Ballerina has cracked the challenge of mapping one kind of data value to another kind of data value, simultaneously as code and picture, so that both are simple, powerful, and boundless.","url":"","image":"images/health-data-mapping.png"},"code":""}}},"__N_SSG":true}